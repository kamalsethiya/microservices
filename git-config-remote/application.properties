# ================================================
# = TOMCAT AND APP LEVEL CONFIGURATION 
# =================================================
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true

#===================================================
#oAuth2 and JWT token relates properties
#===================================================
security.oauth2.resource=http://manageapi.cloudamize.com
public.key.file.path=E:/spring-cloud-microservices/microservices-workspace/environment-keys/public.key

# =========================================
# = Eureka CONFIGURATION
# =========================================
eureka.client.service-url.defaultZone=http://127.0.0.1:8761/eureka

spring.cloud.config.allow-override=true
spring.cloud.config.override-none=true
spring.cloud.config.override-system-properties=false

#below rabbitmq configuration is default configuration. So even if we do not add below conf it will work. 
#However in prod we need to configure it with prod ip and a valid username and password. 
#Guest user only work in localhost.  Spring cloud bus publish event to rabbitmq when bus-refresh endpoint 
#is envoked so that all other services can refresh with latest configuration.  
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest



#Flag to indicate that config server discovery is enabled (config server URL will be looked up via discovery). Default: *false*
spring.cloud.config.enabled=true
#Service id to locate config server. Default: *configserver*
#spring.cloud.config.discovery.service-id=cloud-config-server


#Enable following  property if config server is not registered with Eureka
#spring.cloud.config.uri=http://localhost:8888

#Ex: If dev profile is active for employee-resource-service then config server will try to load properties from file in following order:
# application.properties > employee-resource-service.properties > employee-resource-service-dev.properties
# so properties defined in  employee-resource-service-dev.properties file will supersede all other property with same key. 
# define peoperties in the application.properties file those are common across all the microservices 
