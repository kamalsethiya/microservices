# ================================================
# = TOMCAT AND APP LEVEL CONFIGURATION 
# =================================================
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true

#===================================================
#oAuth2 and JWT token relates properties
#===================================================
security.oauth2.resource=http://manageapi.cloudamize.com
public.key.file.path=E:/spring-cloud-microservices/microservices-workspace/environment-keys/public.key

# =========================================
# = Eureka CONFIGURATION
# =========================================
eureka.client.service-url.defaultZone=http://127.0.0.1:8761/eureka

#Overriding the Values of Remote Properties
#The property sources that are added to you application by the bootstrap context are often "remote" 
#(e.g. from a Config Server), and by default they cannot be overridden locally, except on the command line.
# If you want to allow your applications to override the remote properties with their own System properties 
#or config files, the remote property source has to grant it permission by setting spring.cloud.config.allowOverride=true 
#(it doesn’t work to set this locally). Once that flag is set there are some finer grained settings to control 
#the location of the remote properties in relation to System properties and the application’s local 
#configuration: spring.cloud.config.overrideNone=true to override with any local property source, 
#and spring.cloud.config.overrideSystemProperties=false if only System properties and 
#env vars should override the remote settings, but not the local config files.
#Refer : http://cloud.spring.io/spring-cloud-static/spring-cloud.html#overriding-bootstrap-properties
spring.cloud.config.allowOverride=true